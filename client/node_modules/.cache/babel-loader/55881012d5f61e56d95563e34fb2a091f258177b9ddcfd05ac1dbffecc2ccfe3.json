{"ast":null,"code":"var _jsxFileName = \"G:\\\\Code\\\\Blood-Donation\\\\client\\\\src\\\\views\\\\becomeDonor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BecomeDonorForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    bloodType: '',\n    medicalHistory: '',\n    distance: '',\n    latitude: null,\n    longitude: null\n  });\n  const id = localStorage.getItem('token');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        setFormData({\n          ...formData,\n          latitude,\n          longitude\n        });\n      });\n    }\n  }, []); // Run this effect only once when the component mounts\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleBecomeDonor = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:3000/api/user/becomeDonor/${id}`, formData);\n      console.log('Donor registration successful:', response.data);\n      history.push('/');\n      if (response.data) {\n        alert('Donor registration successful');\n      }\n    } catch (error) {\n      console.error('Donor registration failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleBecomeDonor,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Blood Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bloodType\",\n        value: formData.bloodType,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Medical History:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"medicalHistory\",\n        value: formData.medicalHistory,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Become a Donor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BecomeDonorForm, \"+yTh1OE0+h7llvB8qHGsg4Uc63Y=\");\n_c = BecomeDonorForm;\nexport default BecomeDonorForm;\nvar _c;\n$RefreshReg$(_c, \"BecomeDonorForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BecomeDonorForm","_s","formData","setFormData","name","bloodType","medicalHistory","distance","latitude","longitude","id","localStorage","getItem","navigator","geolocation","getCurrentPosition","position","coords","handleChange","e","target","value","handleBecomeDonor","preventDefault","response","post","console","log","data","history","push","alert","error","onSubmit","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Code/Blood-Donation/client/src/views/becomeDonor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BecomeDonorForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        bloodType: '',\r\n        medicalHistory: '',\r\n        distance: '',\r\n        latitude: null,\r\n        longitude: null,\r\n      });\r\n\r\n    const id = localStorage.getItem('token');\r\n\r\n      useEffect(() => {\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            \r\n            setFormData({ ...formData, latitude, longitude});\r\n          });\r\n        }\r\n      }, []); // Run this effect only once when the component mounts\r\n    \r\n      const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n      };\r\n    \r\n      const handleBecomeDonor = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        try {\r\n        const response = await axios.post(`http://localhost:3000/api/user/becomeDonor/${id}`, formData);\r\n          console.log('Donor registration successful:', response.data);\r\n          history.push('/');\r\n          if(response.data){\r\n            alert('Donor registration successful');\r\n          }\r\n        } catch (error) {\r\n          console.error('Donor registration failed:', error);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <form onSubmit={handleBecomeDonor}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Blood Type:\r\n        <input\r\n          type=\"text\"\r\n          name=\"bloodType\"\r\n          value={formData.bloodType}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Medical History:\r\n        <textarea\r\n          name=\"medicalHistory\"\r\n          value={formData.medicalHistory}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n\r\n      <button type=\"submit\">Become a Donor</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BecomeDonorForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}